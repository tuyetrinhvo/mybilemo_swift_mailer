imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi: ~
    translator: { fallbacks: ["%locale%"] }
    secret: "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: "%locale%"
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: "%kernel.project_dir%/var/sessions/%kernel.environment%"
        name: mybilemo_session
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: "%kernel.debug%"
    strict_variables: '%kernel.debug%'
    form_themes: ['bootstrap_3_layout.html.twig']

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        server_version: 5.7.14
        host: "%database_host%"
        port: "%database_port%"
        dbname: "%database_name%"
        user: "%database_user%"
        password: '%database_password%'
        charset: UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
        transport: mail
        host:      "%mailer_host%"
        encryption: ssl
        port:      465
        auth_mode: login
        delivery_address: ['tuyetrinhvo@gmail.com']
        username:  "%mailer_user%"
        password:  "%mailer_password%"
        sender_address: noreply@ttvo.fr
        spool:     { type: memory }

fos_rest:
    param_fetcher_listener: force
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    view:
        formats: { json: true, xml: false, rss: false }
        view_response_listener: true
        mime_types:
            json: ['application/json', 'application/json;version=1.0', 'application/json;version=2.0']
    serializer:
        serialize_null: true
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json'], fallback_format: 'json' }
            - { path: '^/', priorities: ['html'], fallback_format: 'html' }
    exception:
        enabled: true
        codes:
            { AppBundle\Exception\ResourceValidationException: 400, \Exception: 500 }
        messages:
            { AppBundle\Exception\ResourceValidationException: true }
    versioning:
            enabled: true
            resolvers:
                media_type: # Accept header
                    enabled: true
                    regex: '/(v|version)=(?P<version>[0-9\.]+)/'

nelmio_api_doc: ~

fos_oauth_server:
    db_driver: orm       # Drivers available: orm, mongodb, or propel
    client_class:        AppBundle\Entity\Client
    access_token_class:  AppBundle\Entity\AccessToken
    refresh_token_class: AppBundle\Entity\RefreshToken
    auth_code_class:     AppBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username
        #options:
            #access_token_lifetime: 600000
            #token_type: Bearer

fos_user:
    db_driver: orm # le type BDD Ã  utiliser, on utilise l'ORM Doctrine
    firewall_name: api
    user_class: AppBundle\Entity\User
    from_email:
        address: noreply@ttvo.fr
        sender_name: tuyetrinhvo

jms_serializer:
    metadata:
        directories:
            FOSUserBundle:
                namespace_prefix: "FOS\\UserBundle"
                path: "%kernel.root_dir%/Resources/serializer/FOS"